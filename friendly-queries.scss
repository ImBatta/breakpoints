////
// Friendly queries
// v1.0.2 | MIT
//

// Settings
// ---------------------------------------------------------------- //

$friendly-queries: (
  horizontal: (
    smallest: 20em,
    smaller: 30em,
    small: 48em,
    medium: 64em,
    large: 80em,
    larger: 120em,
    largest: 160em
  ),
  vertical: (
    smallest: 20em,
    smaller: 22.5em,
    small: 25em,
    medium: 33.75em,
    large: 37.5em,
    larger: 50em,
    largest: 64em
  ),
  density: (
    ldpi: .75,
    mdpi: 1,
    tvdpi: 1.3,
    hdpi: 1.5,
    xhdpi: 2,
    xxhdpi: 3,
    xxxhdpi: 4
  )
) !default;

// Helpers
// ---------------------------------------------------------------- //

@function get-media-condition($type, $key) {
  $nested-map: map-get($friendly-queries, $type);

  @if map-has-key($nested-map, $key) {
    @return map-get($nested-map, $key);
  } @else {
    @error 'The `#{$key}` key does not exist in `$friendly-queries` map.';
  }
}

@function get-media-direction($direction) {
  @if $direction == horizontal {
    @return width;
  } @else if $direction == vertical {
    @return height;
  } @else {
    @error '`#{$direction}` it is not a valid direction value.';
  }
}

@function get-media-orientation($mode) {
  @if $mode == landscape or $mode == portrait {
    @return $mode;
  } @else {
    @error '`#{$mode}` it is not a valid orientation value.';
  }
}

// Mixins
// ---------------------------------------------------------------- //

@mixin density-above($ratio) {
  @media
  (-webkit-min-device-pixel-ratio: get-media-condition(density, $ratio)),
  (min-resolution: floor(get-media-condition(density, $ratio) * 96dpi)) {
    @content;
  }
}

@mixin density-below($ratio) {
  @media
  (-webkit-max-device-pixel-ratio: get-media-condition(density, $ratio)),
  (max-resolution: floor(get-media-condition(density, $ratio) * 96dpi)) {
    @content;
  }
}

@mixin density-between($min-ratio, $max-ratio) {
  @media
  (-webkit-min-device-pixel-ratio: get-media-condition(density, $min-ratio))
  and (-webkit-max-device-pixel-ratio: get-media-condition(density, $max-ratio)),
  (min-resolution: floor(get-media-condition(density, $min-ratio) * 96dpi))
  and (max-resolution: floor(get-media-condition(density, $max-ratio) * 96dpi)) {
    @content;
  }
}

@mixin device-above($length, $direction: horizontal) {
  @media
  (min-device-#{get-media-direction($direction)}: get-media-condition($direction, $length)) {
    @content;
  }
}

@mixin device-below($length, $direction: horizontal) {
  @media
  (max-device-#{get-media-direction($direction)}: get-media-condition($direction, $length)) {
    @content;
  }
}

@mixin device-between($min-length, $max-length, $direction: horizontal) {
  @media
  (min-device-#{get-media-direction($direction)}: get-media-condition($direction, $min-length))
  and (max-device-#{get-media-direction($direction)}: get-media-condition($direction, $max-length)) {
    @content;
  }
}

@mixin orientation($mode) {
  @media
  (orientation: get-media-orientation($mode)) {
    @content;
  }
}

@mixin print() {
  @media print {
    @content;
  }
}

@mixin viewport-above($length, $direction: horizontal) {
  @media
  (min-#{get-media-direction($direction)}: get-media-condition($direction, $length)) {
    @content;
  }
}

@mixin viewport-below($length, $direction: horizontal) {
  @media
  (max-#{get-media-direction($direction)}: get-media-condition($direction, $length)) {
    @content;
  }
}

@mixin viewport-between($min-length, $max-length, $direction: horizontal) {
  @media
  (min-#{get-media-direction($direction)}: get-media-condition($direction, $min-length))
  and (max-#{get-media-direction($direction)}: get-media-condition($direction, $max-length)) {
    @content;
  }
}
